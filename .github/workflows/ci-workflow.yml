name: Continuous Integration

on:
  workflow_dispatch:
    inputs:
      build-download-choice:
        description: 'Build or Download from GH Packages'
        type: choice
        default: Build
        options:
          - Build
          - Download
      build-tool:
        description: 'maven/gradle'
        type: choice
        default: maven
        options:
          - maven
          - gradle
      build-tasks:
        description: 'Build tasks if build is true'
        type: string
      publish-flag:
        description: 'Publish if build is true'
        type: boolean
        default: true
      fortify-flag:
        description: 'Run Fortify'
        type: boolean
        default: false
      fortify-app-name:
        description: 'Fortify Application Name, skip if application is not customer facing or not running Fortify.'
        required: false
        type: string
      pcf-flag:
        description: 'Deploy to PCF'
        type: boolean
        default: false
      foss-flag:
        description: 'Run FOSS'
        type: boolean
        default: false
      requestor:
        description: 'FOSS requestor'
        type: string
      foss-process:
        description: 'FOSS process'
        type: choice
        default: Scan, Save and Submit
        options:
          - Scan
          - Scan, Save and Submit
          - Scan, Save and Submit All False
          - Submit

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  Initialize:
    name: Initialize
    runs-on: arc2-runner-set
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: List Workspace Contents
        run: |
          echo "WorkSpace: $GITHUB_WORKSPACE" ;
          ls -R ${{ github.workspace }}
  encrypt-pcf-commands:
    runs-on: arc2-runner-set
    environment: 'development'   # Use this environment to grab the secrets and variables.
    outputs:
      encrypted: ${{ steps.encrypt.outputs.encrypted }}
    steps:
      # GitHub does not allow passing secrets as an input to a job, so this must be encrypted.
      - name: Encrypt PCF Command
        id: encrypt
        uses: FedEx/eai-3538069-encrypt/encrypt@v1
        with:
          # Specify ALL secrets here, so they will be redacted when printed out by GitHub.
          secrets: |
            ${{ secrets.CICD_SVC_ACC_PW }}
          encrypt: |
            # push new version
            cf push ${ARTIFACT_ID} -i 1 -f manifest.yml --var "hostname=${ARTIFACT_ID}.app.${PCF_PLATFORM}.paas.fedex.com" \
              -p "${BINARY_FILE_NAME}" --no-start
            cf set-env ${ARTIFACT_ID} SPRING_PROFILES_ACTIVE cloud
            cf set-env ${ARTIFACT_ID} JAVA_OPTS '-Duser.timezone=GMT -Dspring.profiles.active=cloud -Dappdynamics.http.proxyHost=internet.proxy.fedex.com -Dappdynamics.http.proxyPort=3128 -Duser.timezone=GMT -Dhttp.proxyHost=internet.proxy.fedex.com -Dhttp.proxyPort=3128 -Dhttps.proxyHost=internet.proxy.fedex.com -Dhttps.proxyPort=3128 -Dhttp.proxySet=true -Dhttps.proxySet=true' 
            cf set-env monitoring-api CONFIG_URI https://clh-config-server-dev.devapp.paas.fedex.com
            cf set-env monitoring-api CLH_DB_URL ${{vars.CLH_DB_URL}}
            cf set-env monitoring-api EUREKA_URIS https://clh-service-registry-dev.app.clwdev1.paas.fedex.com/eureka
            cf set-env monitoring-api CLH_DB_USERNAME ${{vars.CLH_DB_USERNAME}}
            cf set-env monitoring-api CLH_DB_PASSWORD ${{secrets.CLH_DEV_DB_PASSWORD}}
            cf set-env monitoring-api CLH_S3_URL ${{vars.CLH_DEV_S3_URL}}
            cf set-env monitoring-api CLH_S3_ID ${{secrets.CLH_S3_DEV_ID}}
            cf set-env monitoring-api CLH_S3_SECRET ${{secrets.CLH_S3_DEV_SECRET}}
            cf set-env monitoring-api CLH_S3_REGION ${{vars.CLH_S3_DEV_REGION}}
            cf set-env monitoring-api CLH_S3_GTP_DATA_LOAD_BUCKET_NAME ${{vars.CLH_S3_DEV_GTP_DATA_LOAD_BUCKET_NAME}}
            cf set-env monitoring-api CLH_MAIL_HOST ${{vars.CLH_MAIL_HOST}}
            cf set-env monitoring-api CLH_MAIL_PORT 25
            cf set-env monitoring-api APPDYNAMICS_AGENT_APPLICATION_NAME FTNTB-CLASS-APPS-3537039
            cf set-env monitoring-api APPDYNAMICS_AGENT_TIER_NAME monitoring-api-3537039-clwdev1-dev
            cf set-env monitoring-api OKTA_CLIENT_ID ${{secrets.DEV_OKTA_CLIENT_ID}}
            cf set-env monitoring-api OKTA_ISSUER_URL ${{secrets.DEV_OKTA_ISSUER_URL}}
            cf set-env monitoring-api OKTA_REDIRECT_URL ${{secrets.DEV_OKTA_REDIRECT_URL}}
            cf set-env monitoring-api OKTA_AUDIENCE ${{secrets.DEV_OKTA_AUDIENCE}}
            if ! cf start ${ARTIFACT_ID}; then
              cf logs ${ARTIFACT_ID} --recent
              exit 1
            fi

  Build:
    name: Build Gradle Project
    uses: FedEx/eai-3538069-cicd-java/.github/workflows/build-scan-pcf.yml@v3
    needs: [Initialize,encrypt-pcf-commands]
    with:
      build-tool: ${{ inputs.build-tool }}
      build-flag: ${{ inputs.build-download-choice == 'Build' && true || false  }}
      build-options: ${{ inputs.build-options }}
      build-tasks: ${{ github.event.inputs.build-tasks || 'clean build' }}
      publish-flag: ${{ inputs.publish-flag && (inputs.publish-flag == true && true || false) || false }}
      fortify-flag: ${{ inputs.fortify-flag && (inputs.fortify-flag == true && true || false) || false }}
      fortify-app-name:  ${{ github.event.inputs.fortify-app-name }}
      foss-flag: ${{ inputs.foss-flag && (inputs.foss-flag == true && true || false) || false }}
      foss-process: ${{ inputs.foss-process }}
      requestor:  ${{ github.event.inputs.requestor }}
      foss-zone: 'Internal Usage - Back Office (Includes COPE mobile Devices, Desktop Development, Testing, support and maintenance)'
      # PCF Commands
      pcf-flag: ${{ inputs.pcf-flag == true && true || false }}
      pam-id: '2132001'
      pcf-qa-deploy-matrix: |
        development,clwdev1
      pcf-encrypted-commands: ${{ needs.encrypt-pcf-commands.outputs.encrypted }}
      cicd-svc-acc-user: ${{ vars.CICD_SVC_ACC_USER }}
    secrets:
      cicd-svc-acc-pw: ${{ secrets.CICD_SVC_ACC_PW }}

